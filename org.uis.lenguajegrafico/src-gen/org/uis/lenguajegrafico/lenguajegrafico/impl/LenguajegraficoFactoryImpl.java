/**
 * generated by Xtext 2.13.0-SNAPSHOT
 */
package org.uis.lenguajegrafico.lenguajegrafico.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.uis.lenguajegrafico.lenguajegrafico.Area;
import org.uis.lenguajegrafico.lenguajegrafico.BarChart;
import org.uis.lenguajegrafico.lenguajegrafico.CellSize;
import org.uis.lenguajegrafico.lenguajegrafico.Chart;
import org.uis.lenguajegrafico.lenguajegrafico.CodeGeneratedTarget;
import org.uis.lenguajegrafico.lenguajegrafico.Configuration;
import org.uis.lenguajegrafico.lenguajegrafico.DashBoard;
import org.uis.lenguajegrafico.lenguajegrafico.Datatype;
import org.uis.lenguajegrafico.lenguajegrafico.Element;
import org.uis.lenguajegrafico.lenguajegrafico.Hole;
import org.uis.lenguajegrafico.lenguajegrafico.Labelx;
import org.uis.lenguajegrafico.lenguajegrafico.Labely;
import org.uis.lenguajegrafico.lenguajegrafico.Legend;
import org.uis.lenguajegrafico.lenguajegrafico.Lenguajegrafico;
import org.uis.lenguajegrafico.lenguajegrafico.LenguajegraficoFactory;
import org.uis.lenguajegrafico.lenguajegrafico.LenguajegraficoPackage;
import org.uis.lenguajegrafico.lenguajegrafico.LineChart;
import org.uis.lenguajegrafico.lenguajegrafico.MakerType;
import org.uis.lenguajegrafico.lenguajegrafico.MapChart;
import org.uis.lenguajegrafico.lenguajegrafico.MapType;
import org.uis.lenguajegrafico.lenguajegrafico.NormaliceData;
import org.uis.lenguajegrafico.lenguajegrafico.Orientation;
import org.uis.lenguajegrafico.lenguajegrafico.PieChart;
import org.uis.lenguajegrafico.lenguajegrafico.TableChart;
import org.uis.lenguajegrafico.lenguajegrafico.Text;
import org.uis.lenguajegrafico.lenguajegrafico.Title;
import org.uis.lenguajegrafico.lenguajegrafico.Tuple;
import org.uis.lenguajegrafico.lenguajegrafico.Tuple1;
import org.uis.lenguajegrafico.lenguajegrafico.Tuple2;
import org.uis.lenguajegrafico.lenguajegrafico.Tuple3;
import org.uis.lenguajegrafico.lenguajegrafico.Tuple4;
import org.uis.lenguajegrafico.lenguajegrafico.URL;
import org.uis.lenguajegrafico.lenguajegrafico.ZoomLevel;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LenguajegraficoFactoryImpl extends EFactoryImpl implements LenguajegraficoFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static LenguajegraficoFactory init()
  {
    try
    {
      LenguajegraficoFactory theLenguajegraficoFactory = (LenguajegraficoFactory)EPackage.Registry.INSTANCE.getEFactory(LenguajegraficoPackage.eNS_URI);
      if (theLenguajegraficoFactory != null)
      {
        return theLenguajegraficoFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new LenguajegraficoFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LenguajegraficoFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case LenguajegraficoPackage.LENGUAJEGRAFICO: return createLenguajegrafico();
      case LenguajegraficoPackage.ELEMENT: return createElement();
      case LenguajegraficoPackage.DATATYPE: return createDatatype();
      case LenguajegraficoPackage.CHART: return createChart();
      case LenguajegraficoPackage.TUPLE: return createTuple();
      case LenguajegraficoPackage.TEXT: return createText();
      case LenguajegraficoPackage.NUMBER: return createNumber();
      case LenguajegraficoPackage.FLOAT: return createFloat();
      case LenguajegraficoPackage.URL: return createURL();
      case LenguajegraficoPackage.TITLE: return createTitle();
      case LenguajegraficoPackage.LABELX: return createLabelx();
      case LenguajegraficoPackage.LABELY: return createLabely();
      case LenguajegraficoPackage.LEGEND: return createLegend();
      case LenguajegraficoPackage.HOLE: return createHole();
      case LenguajegraficoPackage.ORIENTATION: return createOrientation();
      case LenguajegraficoPackage.AREA: return createArea();
      case LenguajegraficoPackage.ZOOM_LEVEL: return createZoomLevel();
      case LenguajegraficoPackage.MAKER_TYPE: return createMakerType();
      case LenguajegraficoPackage.MAP_TYPE: return createMapType();
      case LenguajegraficoPackage.CELL_SIZE: return createCellSize();
      case LenguajegraficoPackage.PIE_CHART: return createPieChart();
      case LenguajegraficoPackage.BAR_CHART: return createBarChart();
      case LenguajegraficoPackage.LINE_CHART: return createLineChart();
      case LenguajegraficoPackage.MAP_CHART: return createMapChart();
      case LenguajegraficoPackage.TABLE_CHART: return createTableChart();
      case LenguajegraficoPackage.DASH_BOARD: return createDashBoard();
      case LenguajegraficoPackage.TUPLE1: return createTuple1();
      case LenguajegraficoPackage.TUPLE2: return createTuple2();
      case LenguajegraficoPackage.TUPLE3: return createTuple3();
      case LenguajegraficoPackage.TUPLE4: return createTuple4();
      case LenguajegraficoPackage.CONFIGURATION: return createConfiguration();
      case LenguajegraficoPackage.CODE_GENERATED_TARGET: return createCodeGeneratedTarget();
      case LenguajegraficoPackage.NORMALICE_DATA: return createNormaliceData();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Lenguajegrafico createLenguajegrafico()
  {
    LenguajegraficoImpl lenguajegrafico = new LenguajegraficoImpl();
    return lenguajegrafico;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Element createElement()
  {
    ElementImpl element = new ElementImpl();
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Datatype createDatatype()
  {
    DatatypeImpl datatype = new DatatypeImpl();
    return datatype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Chart createChart()
  {
    ChartImpl chart = new ChartImpl();
    return chart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Tuple createTuple()
  {
    TupleImpl tuple = new TupleImpl();
    return tuple;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Text createText()
  {
    TextImpl text = new TextImpl();
    return text;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.uis.lenguajegrafico.lenguajegrafico.Number createNumber()
  {
    NumberImpl number = new NumberImpl();
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.uis.lenguajegrafico.lenguajegrafico.Float createFloat()
  {
    FloatImpl float_ = new FloatImpl();
    return float_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public URL createURL()
  {
    URLImpl url = new URLImpl();
    return url;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Title createTitle()
  {
    TitleImpl title = new TitleImpl();
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Labelx createLabelx()
  {
    LabelxImpl labelx = new LabelxImpl();
    return labelx;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Labely createLabely()
  {
    LabelyImpl labely = new LabelyImpl();
    return labely;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Legend createLegend()
  {
    LegendImpl legend = new LegendImpl();
    return legend;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Hole createHole()
  {
    HoleImpl hole = new HoleImpl();
    return hole;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Orientation createOrientation()
  {
    OrientationImpl orientation = new OrientationImpl();
    return orientation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Area createArea()
  {
    AreaImpl area = new AreaImpl();
    return area;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ZoomLevel createZoomLevel()
  {
    ZoomLevelImpl zoomLevel = new ZoomLevelImpl();
    return zoomLevel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MakerType createMakerType()
  {
    MakerTypeImpl makerType = new MakerTypeImpl();
    return makerType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MapType createMapType()
  {
    MapTypeImpl mapType = new MapTypeImpl();
    return mapType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CellSize createCellSize()
  {
    CellSizeImpl cellSize = new CellSizeImpl();
    return cellSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PieChart createPieChart()
  {
    PieChartImpl pieChart = new PieChartImpl();
    return pieChart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BarChart createBarChart()
  {
    BarChartImpl barChart = new BarChartImpl();
    return barChart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LineChart createLineChart()
  {
    LineChartImpl lineChart = new LineChartImpl();
    return lineChart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MapChart createMapChart()
  {
    MapChartImpl mapChart = new MapChartImpl();
    return mapChart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TableChart createTableChart()
  {
    TableChartImpl tableChart = new TableChartImpl();
    return tableChart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DashBoard createDashBoard()
  {
    DashBoardImpl dashBoard = new DashBoardImpl();
    return dashBoard;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Tuple1 createTuple1()
  {
    Tuple1Impl tuple1 = new Tuple1Impl();
    return tuple1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Tuple2 createTuple2()
  {
    Tuple2Impl tuple2 = new Tuple2Impl();
    return tuple2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Tuple3 createTuple3()
  {
    Tuple3Impl tuple3 = new Tuple3Impl();
    return tuple3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Tuple4 createTuple4()
  {
    Tuple4Impl tuple4 = new Tuple4Impl();
    return tuple4;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Configuration createConfiguration()
  {
    ConfigurationImpl configuration = new ConfigurationImpl();
    return configuration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CodeGeneratedTarget createCodeGeneratedTarget()
  {
    CodeGeneratedTargetImpl codeGeneratedTarget = new CodeGeneratedTargetImpl();
    return codeGeneratedTarget;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NormaliceData createNormaliceData()
  {
    NormaliceDataImpl normaliceData = new NormaliceDataImpl();
    return normaliceData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LenguajegraficoPackage getLenguajegraficoPackage()
  {
    return (LenguajegraficoPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static LenguajegraficoPackage getPackage()
  {
    return LenguajegraficoPackage.eINSTANCE;
  }

} //LenguajegraficoFactoryImpl
