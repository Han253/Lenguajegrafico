/**
 * generated by Xtext 2.13.0-SNAPSHOT
 */
package org.uis.lenguajegrafico.lenguajegrafico.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.uis.lenguajegrafico.lenguajegrafico.Area;
import org.uis.lenguajegrafico.lenguajegrafico.BarChart;
import org.uis.lenguajegrafico.lenguajegrafico.CellSize;
import org.uis.lenguajegrafico.lenguajegrafico.Chart;
import org.uis.lenguajegrafico.lenguajegrafico.CodeGeneratedTarget;
import org.uis.lenguajegrafico.lenguajegrafico.Configuration;
import org.uis.lenguajegrafico.lenguajegrafico.DashBoard;
import org.uis.lenguajegrafico.lenguajegrafico.Datatype;
import org.uis.lenguajegrafico.lenguajegrafico.Element;
import org.uis.lenguajegrafico.lenguajegrafico.Hole;
import org.uis.lenguajegrafico.lenguajegrafico.Labelx;
import org.uis.lenguajegrafico.lenguajegrafico.Labely;
import org.uis.lenguajegrafico.lenguajegrafico.Legend;
import org.uis.lenguajegrafico.lenguajegrafico.Lenguajegrafico;
import org.uis.lenguajegrafico.lenguajegrafico.LenguajegraficoFactory;
import org.uis.lenguajegrafico.lenguajegrafico.LenguajegraficoPackage;
import org.uis.lenguajegrafico.lenguajegrafico.LineChart;
import org.uis.lenguajegrafico.lenguajegrafico.MakerType;
import org.uis.lenguajegrafico.lenguajegrafico.MapChart;
import org.uis.lenguajegrafico.lenguajegrafico.MapType;
import org.uis.lenguajegrafico.lenguajegrafico.NormaliceData;
import org.uis.lenguajegrafico.lenguajegrafico.Orientation;
import org.uis.lenguajegrafico.lenguajegrafico.PieChart;
import org.uis.lenguajegrafico.lenguajegrafico.TableChart;
import org.uis.lenguajegrafico.lenguajegrafico.Text;
import org.uis.lenguajegrafico.lenguajegrafico.Title;
import org.uis.lenguajegrafico.lenguajegrafico.Tuple;
import org.uis.lenguajegrafico.lenguajegrafico.Tuple1;
import org.uis.lenguajegrafico.lenguajegrafico.Tuple2;
import org.uis.lenguajegrafico.lenguajegrafico.Tuple3;
import org.uis.lenguajegrafico.lenguajegrafico.Tuple4;
import org.uis.lenguajegrafico.lenguajegrafico.ZoomLevel;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LenguajegraficoPackageImpl extends EPackageImpl implements LenguajegraficoPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lenguajegraficoEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass datatypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass chartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tupleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass textEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass numberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass floatEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass urlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass titleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass labelxEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass labelyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass legendEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass holeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass orientationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass areaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass zoomLevelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass makerTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mapTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cellSizeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pieChartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass barChartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lineChartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mapChartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tableChartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dashBoardEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tuple1EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tuple2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tuple3EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tuple4EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass configurationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass codeGeneratedTargetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass normaliceDataEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.uis.lenguajegrafico.lenguajegrafico.LenguajegraficoPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private LenguajegraficoPackageImpl()
  {
    super(eNS_URI, LenguajegraficoFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link LenguajegraficoPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static LenguajegraficoPackage init()
  {
    if (isInited) return (LenguajegraficoPackage)EPackage.Registry.INSTANCE.getEPackage(LenguajegraficoPackage.eNS_URI);

    // Obtain or create and register package
    LenguajegraficoPackageImpl theLenguajegraficoPackage = (LenguajegraficoPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof LenguajegraficoPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new LenguajegraficoPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theLenguajegraficoPackage.createPackageContents();

    // Initialize created meta-data
    theLenguajegraficoPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theLenguajegraficoPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(LenguajegraficoPackage.eNS_URI, theLenguajegraficoPackage);
    return theLenguajegraficoPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLenguajegrafico()
  {
    return lenguajegraficoEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLenguajegrafico_Elements()
  {
    return (EReference)lenguajegraficoEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getElement()
  {
    return elementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDatatype()
  {
    return datatypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDatatype_Name()
  {
    return (EAttribute)datatypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getChart()
  {
    return chartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getChart_Name()
  {
    return (EAttribute)chartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getChart_Features()
  {
    return (EReference)chartEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTuple()
  {
    return tupleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTuple_Name()
  {
    return (EAttribute)tupleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTuple_Url()
  {
    return (EReference)tupleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getText()
  {
    return textEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNumber()
  {
    return numberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFloat()
  {
    return floatEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getURL()
  {
    return urlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getURL_Value()
  {
    return (EAttribute)urlEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTitle()
  {
    return titleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTitle_Value()
  {
    return (EAttribute)titleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLabelx()
  {
    return labelxEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLabelx_Value()
  {
    return (EAttribute)labelxEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLabely()
  {
    return labelyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLabely_Value()
  {
    return (EAttribute)labelyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLegend()
  {
    return legendEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLegend_Value()
  {
    return (EAttribute)legendEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getHole()
  {
    return holeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getHole_Value()
  {
    return (EAttribute)holeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOrientation()
  {
    return orientationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getOrientation_Value()
  {
    return (EAttribute)orientationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getArea()
  {
    return areaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getArea_Value()
  {
    return (EAttribute)areaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getZoomLevel()
  {
    return zoomLevelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getZoomLevel_Value()
  {
    return (EAttribute)zoomLevelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMakerType()
  {
    return makerTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMakerType_Value()
  {
    return (EAttribute)makerTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMapType()
  {
    return mapTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMapType_Value()
  {
    return (EAttribute)mapTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCellSize()
  {
    return cellSizeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCellSize_Value()
  {
    return (EAttribute)cellSizeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPieChart()
  {
    return pieChartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPieChart_Tuple()
  {
    return (EReference)pieChartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBarChart()
  {
    return barChartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBarChart_Tuple()
  {
    return (EReference)barChartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLineChart()
  {
    return lineChartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLineChart_Tuple()
  {
    return (EReference)lineChartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMapChart()
  {
    return mapChartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMapChart_Tuple()
  {
    return (EReference)mapChartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTableChart()
  {
    return tableChartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTableChart_Tuple()
  {
    return (EReference)tableChartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDashBoard()
  {
    return dashBoardEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDashBoard_Name()
  {
    return (EAttribute)dashBoardEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDashBoard_Charts()
  {
    return (EReference)dashBoardEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDashBoard_Features()
  {
    return (EReference)dashBoardEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTuple1()
  {
    return tuple1EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTuple1_Value1()
  {
    return (EReference)tuple1EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTuple1_Value2()
  {
    return (EReference)tuple1EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTuple2()
  {
    return tuple2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTuple2_Value1()
  {
    return (EReference)tuple2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTuple2_Value2()
  {
    return (EReference)tuple2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTuple3()
  {
    return tuple3EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTuple3_Value1()
  {
    return (EReference)tuple3EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTuple3_Value2()
  {
    return (EReference)tuple3EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTuple3_Value3()
  {
    return (EReference)tuple3EClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTuple4()
  {
    return tuple4EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTuple4_Values()
  {
    return (EReference)tuple4EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getConfiguration()
  {
    return configurationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConfiguration_Value()
  {
    return (EAttribute)configurationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCodeGeneratedTarget()
  {
    return codeGeneratedTargetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNormaliceData()
  {
    return normaliceDataEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LenguajegraficoFactory getLenguajegraficoFactory()
  {
    return (LenguajegraficoFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    lenguajegraficoEClass = createEClass(LENGUAJEGRAFICO);
    createEReference(lenguajegraficoEClass, LENGUAJEGRAFICO__ELEMENTS);

    elementEClass = createEClass(ELEMENT);

    datatypeEClass = createEClass(DATATYPE);
    createEAttribute(datatypeEClass, DATATYPE__NAME);

    chartEClass = createEClass(CHART);
    createEAttribute(chartEClass, CHART__NAME);
    createEReference(chartEClass, CHART__FEATURES);

    tupleEClass = createEClass(TUPLE);
    createEAttribute(tupleEClass, TUPLE__NAME);
    createEReference(tupleEClass, TUPLE__URL);

    textEClass = createEClass(TEXT);

    numberEClass = createEClass(NUMBER);

    floatEClass = createEClass(FLOAT);

    urlEClass = createEClass(URL);
    createEAttribute(urlEClass, URL__VALUE);

    titleEClass = createEClass(TITLE);
    createEAttribute(titleEClass, TITLE__VALUE);

    labelxEClass = createEClass(LABELX);
    createEAttribute(labelxEClass, LABELX__VALUE);

    labelyEClass = createEClass(LABELY);
    createEAttribute(labelyEClass, LABELY__VALUE);

    legendEClass = createEClass(LEGEND);
    createEAttribute(legendEClass, LEGEND__VALUE);

    holeEClass = createEClass(HOLE);
    createEAttribute(holeEClass, HOLE__VALUE);

    orientationEClass = createEClass(ORIENTATION);
    createEAttribute(orientationEClass, ORIENTATION__VALUE);

    areaEClass = createEClass(AREA);
    createEAttribute(areaEClass, AREA__VALUE);

    zoomLevelEClass = createEClass(ZOOM_LEVEL);
    createEAttribute(zoomLevelEClass, ZOOM_LEVEL__VALUE);

    makerTypeEClass = createEClass(MAKER_TYPE);
    createEAttribute(makerTypeEClass, MAKER_TYPE__VALUE);

    mapTypeEClass = createEClass(MAP_TYPE);
    createEAttribute(mapTypeEClass, MAP_TYPE__VALUE);

    cellSizeEClass = createEClass(CELL_SIZE);
    createEAttribute(cellSizeEClass, CELL_SIZE__VALUE);

    pieChartEClass = createEClass(PIE_CHART);
    createEReference(pieChartEClass, PIE_CHART__TUPLE);

    barChartEClass = createEClass(BAR_CHART);
    createEReference(barChartEClass, BAR_CHART__TUPLE);

    lineChartEClass = createEClass(LINE_CHART);
    createEReference(lineChartEClass, LINE_CHART__TUPLE);

    mapChartEClass = createEClass(MAP_CHART);
    createEReference(mapChartEClass, MAP_CHART__TUPLE);

    tableChartEClass = createEClass(TABLE_CHART);
    createEReference(tableChartEClass, TABLE_CHART__TUPLE);

    dashBoardEClass = createEClass(DASH_BOARD);
    createEAttribute(dashBoardEClass, DASH_BOARD__NAME);
    createEReference(dashBoardEClass, DASH_BOARD__CHARTS);
    createEReference(dashBoardEClass, DASH_BOARD__FEATURES);

    tuple1EClass = createEClass(TUPLE1);
    createEReference(tuple1EClass, TUPLE1__VALUE1);
    createEReference(tuple1EClass, TUPLE1__VALUE2);

    tuple2EClass = createEClass(TUPLE2);
    createEReference(tuple2EClass, TUPLE2__VALUE1);
    createEReference(tuple2EClass, TUPLE2__VALUE2);

    tuple3EClass = createEClass(TUPLE3);
    createEReference(tuple3EClass, TUPLE3__VALUE1);
    createEReference(tuple3EClass, TUPLE3__VALUE2);
    createEReference(tuple3EClass, TUPLE3__VALUE3);

    tuple4EClass = createEClass(TUPLE4);
    createEReference(tuple4EClass, TUPLE4__VALUES);

    configurationEClass = createEClass(CONFIGURATION);
    createEAttribute(configurationEClass, CONFIGURATION__VALUE);

    codeGeneratedTargetEClass = createEClass(CODE_GENERATED_TARGET);

    normaliceDataEClass = createEClass(NORMALICE_DATA);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    chartEClass.getESuperTypes().add(this.getElement());
    tupleEClass.getESuperTypes().add(this.getElement());
    textEClass.getESuperTypes().add(this.getDatatype());
    numberEClass.getESuperTypes().add(this.getDatatype());
    floatEClass.getESuperTypes().add(this.getDatatype());
    pieChartEClass.getESuperTypes().add(this.getChart());
    barChartEClass.getESuperTypes().add(this.getChart());
    lineChartEClass.getESuperTypes().add(this.getChart());
    mapChartEClass.getESuperTypes().add(this.getChart());
    tableChartEClass.getESuperTypes().add(this.getChart());
    dashBoardEClass.getESuperTypes().add(this.getElement());
    tuple1EClass.getESuperTypes().add(this.getTuple());
    tuple2EClass.getESuperTypes().add(this.getTuple());
    tuple3EClass.getESuperTypes().add(this.getTuple());
    tuple4EClass.getESuperTypes().add(this.getTuple());
    configurationEClass.getESuperTypes().add(this.getElement());
    codeGeneratedTargetEClass.getESuperTypes().add(this.getConfiguration());
    normaliceDataEClass.getESuperTypes().add(this.getConfiguration());

    // Initialize classes and features; add operations and parameters
    initEClass(lenguajegraficoEClass, Lenguajegrafico.class, "Lenguajegrafico", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLenguajegrafico_Elements(), this.getElement(), null, "elements", null, 0, -1, Lenguajegrafico.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(elementEClass, Element.class, "Element", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(datatypeEClass, Datatype.class, "Datatype", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDatatype_Name(), ecorePackage.getEString(), "name", null, 0, 1, Datatype.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(chartEClass, Chart.class, "Chart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getChart_Name(), ecorePackage.getEString(), "name", null, 0, 1, Chart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getChart_Features(), ecorePackage.getEObject(), null, "features", null, 0, -1, Chart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tupleEClass, Tuple.class, "Tuple", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTuple_Name(), ecorePackage.getEString(), "name", null, 0, 1, Tuple.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTuple_Url(), this.getURL(), null, "url", null, 0, 1, Tuple.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(textEClass, Text.class, "Text", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(numberEClass, org.uis.lenguajegrafico.lenguajegrafico.Number.class, "Number", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(floatEClass, org.uis.lenguajegrafico.lenguajegrafico.Float.class, "Float", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(urlEClass, org.uis.lenguajegrafico.lenguajegrafico.URL.class, "URL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getURL_Value(), ecorePackage.getEString(), "value", null, 0, 1, org.uis.lenguajegrafico.lenguajegrafico.URL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(titleEClass, Title.class, "Title", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTitle_Value(), ecorePackage.getEString(), "value", null, 0, 1, Title.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(labelxEClass, Labelx.class, "Labelx", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLabelx_Value(), ecorePackage.getEString(), "value", null, 0, 1, Labelx.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(labelyEClass, Labely.class, "Labely", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLabely_Value(), ecorePackage.getEString(), "value", null, 0, 1, Labely.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(legendEClass, Legend.class, "Legend", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLegend_Value(), ecorePackage.getEString(), "value", null, 0, 1, Legend.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(holeEClass, Hole.class, "Hole", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getHole_Value(), ecorePackage.getEString(), "value", null, 0, 1, Hole.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(orientationEClass, Orientation.class, "Orientation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOrientation_Value(), ecorePackage.getEString(), "value", null, 0, 1, Orientation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(areaEClass, Area.class, "Area", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getArea_Value(), ecorePackage.getEString(), "value", null, 0, 1, Area.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(zoomLevelEClass, ZoomLevel.class, "ZoomLevel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getZoomLevel_Value(), ecorePackage.getEInt(), "value", null, 0, 1, ZoomLevel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(makerTypeEClass, MakerType.class, "MakerType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMakerType_Value(), ecorePackage.getEString(), "value", null, 0, 1, MakerType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mapTypeEClass, MapType.class, "MapType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMapType_Value(), ecorePackage.getEString(), "value", null, 0, 1, MapType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cellSizeEClass, CellSize.class, "CellSize", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCellSize_Value(), ecorePackage.getEString(), "value", null, 0, 1, CellSize.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pieChartEClass, PieChart.class, "PieChart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPieChart_Tuple(), this.getTuple1(), null, "tuple", null, 0, 1, PieChart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(barChartEClass, BarChart.class, "BarChart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBarChart_Tuple(), this.getTuple2(), null, "tuple", null, 0, 1, BarChart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lineChartEClass, LineChart.class, "LineChart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLineChart_Tuple(), this.getTuple2(), null, "tuple", null, 0, 1, LineChart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mapChartEClass, MapChart.class, "MapChart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMapChart_Tuple(), this.getTuple3(), null, "tuple", null, 0, 1, MapChart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tableChartEClass, TableChart.class, "TableChart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTableChart_Tuple(), this.getTuple4(), null, "tuple", null, 0, 1, TableChart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dashBoardEClass, DashBoard.class, "DashBoard", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDashBoard_Name(), ecorePackage.getEString(), "name", null, 0, 1, DashBoard.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDashBoard_Charts(), this.getChart(), null, "charts", null, 0, -1, DashBoard.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDashBoard_Features(), this.getTitle(), null, "features", null, 0, -1, DashBoard.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tuple1EClass, Tuple1.class, "Tuple1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTuple1_Value1(), this.getText(), null, "value1", null, 0, 1, Tuple1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTuple1_Value2(), this.getNumber(), null, "value2", null, 0, 1, Tuple1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tuple2EClass, Tuple2.class, "Tuple2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTuple2_Value1(), this.getDatatype(), null, "value1", null, 0, 1, Tuple2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTuple2_Value2(), this.getNumber(), null, "value2", null, 0, -1, Tuple2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tuple3EClass, Tuple3.class, "Tuple3", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTuple3_Value1(), this.getFloat(), null, "value1", null, 0, 1, Tuple3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTuple3_Value2(), this.getFloat(), null, "value2", null, 0, 1, Tuple3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTuple3_Value3(), this.getDatatype(), null, "value3", null, 0, 1, Tuple3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tuple4EClass, Tuple4.class, "Tuple4", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTuple4_Values(), this.getDatatype(), null, "values", null, 0, -1, Tuple4.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(configurationEClass, Configuration.class, "Configuration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConfiguration_Value(), ecorePackage.getEString(), "value", null, 0, 1, Configuration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(codeGeneratedTargetEClass, CodeGeneratedTarget.class, "CodeGeneratedTarget", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(normaliceDataEClass, NormaliceData.class, "NormaliceData", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //LenguajegraficoPackageImpl
