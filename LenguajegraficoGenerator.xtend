/*
 * generated by Xtext 2.11.0
 */
package org.uis.lenguajegrafico.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.eclipse.xtext.naming.IQualifiedNameProvider
import javax.inject.Inject
import org.uis.lenguajegrafico.lenguajegrafico.PieChart
import org.uis.lenguajegrafico.lenguajegrafico.ColumnChart
import org.uis.lenguajegrafico.lenguajegrafico.Map
import org.uis.lenguajegrafico.lenguajegrafico.LineChart
import org.uis.lenguajegrafico.lenguajegrafico.Text
import org.uis.lenguajegrafico.lenguajegrafico.URL
/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class LenguajegraficoGenerator extends AbstractGenerator {
    	
	@Inject extension IQualifiedNameProvider
	
	String URLvalue = "var urlServerDefaul= 'http://192.168.100.13:8080/paises';";

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		
		 for(e : resource.allContents.toIterable.filter(URL)){
         	    URLvalue=URLvalue+"var "+e.name+" = '"+e.value+"';";
         }
         
         //Generate properties file, in this file you configure the URL for the Web Service
		 fsa.generateFile("properties.js",URLvalue);
		 
		
		 
         for(e : resource.allContents.toIterable.filter(PieChart)){
         	 fsa.generateFile(
             	 	e.fullyQualifiedName.toString("/")+".html",
             	 	e.compile)   
         }
         
         for(e : resource.allContents.toIterable.filter(ColumnChart)){
         	 fsa.generateFile(
             	 	e.fullyQualifiedName.toString("/")+".html",
             	 	e.compile)   
         }
         
         for(e : resource.allContents.toIterable.filter(Map)){
         	 fsa.generateFile(
             	 	e.fullyQualifiedName.toString("/")+".html",
             	 	e.compile)   
         }
         for(e : resource.allContents.toIterable.filter(LineChart)){
         	 fsa.generateFile(
             	 	e.fullyQualifiedName.toString("/")+".html",
             	 	e.compile)   
         }
	 }
	 
	
	 
	 
	 def compile(PieChart e)'''
	    <html>
	       <head>
	           <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
	           <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
	           <script src="properties.js"></script>
	            <script type="text/javascript">
	                  google.charts.load('current', {'packages':['corechart']});
	                  google.charts.setOnLoadCallback(drawChart);
	                  
	                   function drawChart() {
	                  
	                          // Data table 
	                           var data = new google.visualization.DataTable();
	                           data.addColumn('string', '«e.tuple.label.name»');
	                           data.addColumn('number', '«e.tuple.value.name»');
	                          
	                           $.getJSON(«e.tuple.url.getURL», function(response){
	                               for(var i in response){
	                                   data.addRows([[response[i]["«e.tuple.label.name»"],response[i]["«e.tuple.value.name»"]]]);
	                               }
	                            	                                      
	                               var options = {'title':«e.title.getText»
	                               ,'width':400
	                               ,'height':300};
	                          
	                               // Instantiate and draw our chart, passing in some options.
	                               var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
	                               chart.draw(data, options);       
	                               }); //END getJSON
	                     }               
	           </script>
	           
	       </head>
	       <body>
	         <div id="chart_div"></div>
	       </body>
	    </html>
	'''
		
	
	def compile(ColumnChart e)'''
	   <html>
	     <head>
	       <!--Load the AJAX API-->
	        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
	        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
	        <script src="properties.js"></script>
	        <script type="text/javascript">
	        
	        google.charts.load('current', {packages: ['corechart', 'bar']});
	   google.charts.setOnLoadCallback(drawBasic);
	   
	   function drawBasic() {
	   
	         var data = new google.visualization.DataTable();
	         data.addColumn('number', '«e.tuple.value1.name»');
	         data.addColumn('number', '«e.tuple.value2.name»');
	                               
	         $.getJSON(«e.tuple.url.getURL», function(response){
	                   for(var i in response){
	                       data.addRows([[response[i]["«e.tuple.value1.name»"],response[i]["«e.tuple.value2.name»"]]]);
	                   }
	                                                                         
	                   var options = {'title':«e.title.getText»,'width':400,'height':400};
	                   
	                   var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
	                   chart.draw(data, options);       
	                   }); //END getJSON
	       }
	       </script>
	     </head>
	   
	     <body>
	       <!--Div that will hold the pie chart-->
	       <div id="chart_div"></div>
	     </body>
	   </html>
	'''
		
	def compile(LineChart e)'''
	 <html>
	   <head>
	     <!--Load the AJAX API-->
	      <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
	      <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
	      <script src="properties.js"></script>
	      <script type="text/javascript">
	       google.charts.load('current', {'packages':['corechart']});
	       google.charts.setOnLoadCallback(drawChart);
	 
	       function drawChart() {
	          	var data = new google.visualization.DataTable();
	          	data.addColumn('number', '«e.tuple.value1.name»');
	         	data.addColumn('number', '«e.tuple.value2.name»');
	            
	            
	            $.getJSON(«e.tuple.url.getURL», function(response){
	            	                   for(var i in response){
	            	                       data.addRows([[response[i]["«e.tuple.value1.name»"],response[i]["«e.tuple.value2.name»"]]]);
	            	                   }
	            	                                                                         
	            	                   var options = {'title':«e.title.getText»,'width':400,'height':400};
	            	                   
	            	                   var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
	            	                   chart.draw(data, options);       
	            	                   }); //END getJSON
	            	       }                 
	           </script>
	           
	       </head>
	       <body>
	           <div id="chart_div"></div>
	         </body>
	       </html>
	'''	
	
	def compile(Map e)'''
	<html>
	  <head>
	    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
	    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
	   	<script src="properties.js"></script>
	    <script type="text/javascript">
	      google.charts.load("current", {packages:["map"]});
	      google.charts.setOnLoadCallback(drawChart);
	      
	      
	      function drawChart() {
	      	
	      	var data = new google.visualization.DataTable();
	      	data.addColumn('number', '«e.tuple.value1.name»');
	      	data.addColumn('number', '«e.tuple.value2.name»');
	      	data.addColumn('string', '«e.tuple.value3.name»');
	      	
	      	$.getJSON(«e.tuple.url.getURL», function(response){
	      		 for(var i in response){
	      		      data.addRows([[response[i]["«e.tuple.value1.name»"],response[i]["«e.tuple.value2.name»"],response[i]["«e.tuple.value3.name»"]]]);
	      		 }
	      		            	                                                                         
	      		  var options = {'title':«e.title.getText»};
	      		  var chart = new google.visualization.Map(document.getElementById('map_div'));
	      		 chart.draw(data, options);       
	      		}); //END getJSON	      	
	      }
	
	    </script>
	  </head>
	
	  <body>
	    <div id="map_div" style="width: 800px; height: 600px"></div>
	  </body>
	</html>
	'''
	
	def getText(Text t)'''	
	  «IF t !== null && t.value !== null»'«t.value»'«ELSE»'no defined'«ENDIF»
	'''	
	
	def getURL(URL t)'''	
	  «IF t !== null && t.value !== null»«t.name»«ELSE»urlServerDefaul«ENDIF»
	'''	
}
